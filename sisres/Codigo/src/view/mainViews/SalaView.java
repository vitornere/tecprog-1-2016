/**
 * This class is screen of room generated by swing
 */
package view.mainViews;

import java.sql.SQLException;
import java.util.Iterator;
import java.util.Vector;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import model.Classroom;
<<<<<<< HEAD
import view.alteracoes.AlterarSala;
import view.cadastros.CadastroPatrimonio;
import view.cadastros.CadastroSala;
import view.diasReservas.DiaReservaSala;
import control.ClassroomRegister;
=======
import view.alteracoes.ChangeClassroom;
import view.cadastros.PatrimonyRegistration;
import view.cadastros.ClassroomRegistration;
import view.diasReservas.ClassRoomReserveDay;
import control.ManterSala;
>>>>>>> devel
import exception.PatrimonyException;

public class SalaView extends PratimonyView {

	/**
	 * 
	 * @param parent
	 * @param modal
	 */
    public SalaView(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        searchLbl.setText("Digite a sala desejada: ");
        this.setName("SalaView");
    }

<<<<<<< HEAD
=======
    /**
     * 
     * @param sala
     * @return Vector of table's name or null if empty
     */
>>>>>>> devel
    protected Vector<String> fillDataVector(Classroom sala) {

        if (sala == null) {
            return null;
        }

        Vector<String> nomesTabela = new Vector<String>();

<<<<<<< HEAD
        nomesTabela.add(sala.getIdEquipment());
        nomesTabela.add(sala.getDescriptionEquipment());
=======
        nomesTabela.add(sala.getCode());
        nomesTabela.add(sala.getDescription());
>>>>>>> devel
        nomesTabela.add(sala.getCapacity());

        return nomesTabela;

    }

    /**
     * @exception Patrimony null or Database null
     *
     * (non-Javadoc)
     * @see view.mainViews.PratimonyView#fillTable()
     */
    @Override protected DefaultTableModel fillTable() {
        try {
            DefaultTableModel table = new DefaultTableModel();

<<<<<<< HEAD
            Iterator<Classroom> i = ClassroomRegister.getClassroom().getVectorClassroom().iterator();
=======
            Iterator<Classroom> i = ManterSala.getInstance().getSalas_vet().iterator();
>>>>>>> devel

            table.addColumn("Codigo");
            table.addColumn("Nome");
            table.addColumn("Capacidade");
            while (i.hasNext()) {
                Classroom sala = i.next();
                table.addRow(fillDataVector(sala));
            }

            return table;

        } catch (PatrimonyException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE, null);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE, null);
        }

        return null;
    }

    /*
     * (non-Javadoc)
     * @see view.mainViews.PratimonyView#registerAction()
     */
    @Override protected void registerAction() {
	PatrimonyRegistration cadastro = new ClassroomRegistration(new javax.swing.JFrame(), true);
        cadastro.setResizable(false);
        cadastro.setVisible(true);
        this.patrimonyTable.setModel(fillTable());
    }

    /*
     * (non-Javadoc)
     * @see view.mainViews.PratimonyView#changeAction(int)
     */
    @Override protected void changeAction(int index) {

        ChangeClassroom alteracao = new ChangeClassroom(new javax.swing.JFrame(), true, index);
        alteracao.setResizable(false);
        alteracao.setVisible(true);
        this.patrimonyTable.setModel(fillTable());
    }

    /**
     * @exception Patrimony null or Database null
     *
     * (non-Javadoc)
     * @see view.mainViews.PratimonyView#excluirAction(int)
     */
    @Override protected void excluirAction(int index) {
        try {
            int confirm = JOptionPane
                    .showConfirmDialog(this, "Deseja mesmo excluir Sala: "
<<<<<<< HEAD
                            + ClassroomRegister.getClassroom().getVectorClassroom().get(index).getDescriptionEquipment() + "?", "Excluir",
=======
                            + ManterSala.getInstance().getSalas_vet().get(index).getDescription() + "?", "Excluir",
>>>>>>> devel
                            JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                ClassroomRegister.getClassroom().delete(ClassroomRegister.getClassroom().getVectorClassroom().get(index));
                JOptionPane.showMessageDialog(this, "Sala excluida com sucesso", "Sucesso", JOptionPane.INFORMATION_MESSAGE, null);
            }
            this.patrimonyTable.setModel(fillTable());

        } catch (PatrimonyException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE, null);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE, null);
        }
    }

    /**
     * @exception Patrimony null or Database null
     *
     * (non-Javadoc)
     * @see view.mainViews.PratimonyView#visualizarAction(int)
     */
    @Override protected void visualizarAction(int index) {
        try {
            ClassRoomReserveDay reserva = new ClassRoomReserveDay(new javax.swing.JFrame(), true, index);
            reserva.setResizable(false);
            reserva.setVisible(true);
        } catch (PatrimonyException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE, null);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE, null);
        }
    }
}
